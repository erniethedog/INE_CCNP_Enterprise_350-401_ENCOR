==============================================================

LAN Switching Introduction

Class is using:
Cisco uses IOL/IOu (Virtual switches)
3560X IOS15.0SE physical switch


==============================================================
VLANs & Trunking

//CMD: Switch

VLANS
- Standard VLAN (1-1005)
  > vlan 1: Default ethernet access vlan. default native vlan
          : Cannot be deleted but can be manually pruned from trunks
          : cannot be pruned by VTP
          : should be used for actual port assignment
  > vlan 1002 to 1005
          : default legacy token ring / FDDI vlans
          : cannot be deleted but can be manually pruned from trunks
          : cannot be pruned by VTP
          : should not be used for actual port assignments
          
- Extended VLAN (1006 - 4094)
  > can normally only used in one of 2 cases
    : VTP is configured in transparent mode
    : vtp version 3
  > not all extended VLANs can be used. some are reserved for internal use
    : native layer 3 switchport. switch uses a vlan on the svi on the backend. basically an access port with an IP address
    //CMD: switch#show vlan internal usage
  > not all platforms agree on the internal range
    : for real deployments, check the internal allocations
    : some allocate ascending, some descending
    : look for something like "vlan internal allocation policy ascending" in the show run
    
Creating VLANs
- Globally
- VLAN database
  //CMD: switch(config)#vlan database
- at the time of assignment

Creating a VLAN automatically creates
- spanning-tree instance
- MAC address table

Verified by
- //CMD: switch#show vlan brief
- //CMD: switch#show spanning-tree vlan <vlan number>
- //CMD: switch#show interface trunk


Ethernet Port Types
Layer 2 Switchports
- Access: 1 vlan only
- Trunk: multiple vlans
- Tunnel switchports: layer 2 vpn (802.1q tunnel)
- Dynamic switchpors: DTP negotiation

Layer 2 Trunking
- 802.1q
  > open standard
  > Native VLAN set untagged
//CMD: switch#show interface trunk
//CMD: switch#show inteface switchport
//CMD: switch#show spanning-tree [vlan|interface]


DTP Negotiation
- enabled by default
- DTP desirable mode
  > initiates trunking nego
  > switchport mode dynamic desirable
  > switchport mode trunk
- DTP Auto mode
  > passively listed for trunking nego
  > switchport mode dynamic auto
- turn off
  > switchport nonegotiate (needs to statically assign encapsulation and trunk mode first)
  > switchport mode access
  > switchport mode dot1q-tunnel
- Verify
  > show interface trunk
  > show interface <int_name> switchport
  > show interface switchport
  
Manual Trunk Pruning
- Trunks allowed list controls what vlans will forward over the link
  > all vlans (1-4094)
- allowed list can be edited for manual pruning

> switchport trunk allowed vlan [WORD | add | all | except | none remove ]

> show vlan brief
> show interface status 
  : check status of connected, not connected of errdis)
  : check trunking, routed ports
> show interface switchport
> show interface trunk
> show spanning-tree [vlan|interface]

==============================================================

VLAN Trunking Protocol (VTP)

VTP v1/2 - Modes, Authentication, Pruning

VTP
- sync VLAN creation data between switches
- not a requirement of Ethernet networks
- does not define the broadcast domain

VTP Modes
- Server
  > Creates VLANS
  > Advertised VLAN
  > Install VLANS from other advertisements
  
- Client
  > UNABLE to Create VLANS
  > Advertised VLAN
  > Install VLANS from other advertisements

- Transparent
  > similar to VTP OFF
  > Creates locally significant VLANS
  > Does not install VLANs from other advertisements
  > will forward other advertisements

VTP Configuration Revision
- Revision Number = Sequence number for the database; highest number winds; domian is sync when revision number matches everywhere
- Potential Problem
  > Wrong database with high config revision number can overwrite database
  > true for both VTP servers and clients
  > reason that VTP v1/2 is rarely used in production

Configs:
! VTP runs only on trunks
! By default, domain name is <NULL>. Changing domain from NULL to a certain name DOES NOT increment Rev Num
! Updating configured VLANs increments REV NUM
! Deleting VLANs does not update the "switchport mode access" or any switchport interface levels commands
! Default is VTP version 1
! From MODE Server to Transparent, switch does not delete the vlan database. It creates a vlan config on the global config since vlans are now locally significant
! VTP Domain names MATTER even if a switch is in TRANSPARENT MODE. Should be same domain to forward VTP advertisements
! To turn off VTP, Switch should support VTP ver3
! When you create a VLAN, you create a STP instance and update the MAC-Address Table

Switch(config)#vtp domaine <DOMAIN NAME>

VTP Pruning
- Reducent unnecessary replication of
  > Broadcasts
  > unknown unicasts
  > unknown multicast
- Only works in SERVER and CLIENT mode. DO NOT RUN TRANSPARENT MODE ON ANY SWITCH ON THE NETWORK
- Config:
  > vtp pruning
  > show interface trunk
  > show interface pruning
- VLANS 2-1001 are 'prune eligible' (STANDARD VLANS)
- VLANS not in the prune eligible list cannot be pruned (traffic will always be sent/received for them)
- To edit prune eligible list
  > switchport trunk pruning vlan
- To verify
  > show interface trunk
  > show interface pruning
  > show interface switchport
! showing vlans neighbor switch asked for. prune others not asked
  
VTP Pruning Problems
- What is all devices don't support pruning
  > VTP is not open standard. Cisco Proprietary
  > When no response is received for VTP pruning message, switch tells all other switches to stop pruning
    > All VLANs are now allowed
- What if devices don't agree on VTP rev num
- What if there are VTP Transparent switches

VTP Authentication
- used for validation of VTP updates
- Configuring/Verifying
  > vtp password
  > show vtp password
  > show vtp status
  > compare MD5 hashes

==============================================================

VTP Version 3

Enchancements
Security: Fixes configuration revision overwrite problem
> Primary Server - can make vlan changes 
> Secondary Server - unable to make changes. only listens
> Best practice: promote one switch to primary, then make changes, then demote it back to secondary

> Password can be hidden

New Advertisements
- Extended VLANs
- Private VLANs
- MST configuration (Multiple Spanning Tree)

VTP can now be disabled
- Globally
- Per Link


Feature VLAN, MST: You can be client, server, transparent on these modes (independent of each other)
Commands to set switch to client or server on vlan and mst (global config)
> vtp mode client vlan
> vtp mode clien mst
> vtp mode server vlan ---> makes you secondary server
> vtp mode server mst ---> makes you secondary server

> show vtp status
- Check for Primary ID ---> This is the Primary Server MAC

exec mode
> vtp mode primary [mst|vlan]---> to make this primary server
- there can only be one primary at any instant for a certain feature (1 for vlan, 1 for mst)


For Private VLANs
Example commands:
conf t
vlan 4000
private-vlan primary
end
vlan 4001
private-vlan community
end
vlan 4002
private-vlan isolated
end
vlan 4000
private-vlan association add 4001
private-vlan association add 4002
end
show vlan private-vlan
- This will show that 4000 is primary and 4001 and 4002 is secondary with the specified types (community, isolated)
- Configure this on the primary server and this will be advertised to other switches, along with the associations

For MST
example config
conf t
spanning-tree mst configuration
revision 1
name MST_A
instance 1 vlan 10-20
instance 2 vlan 21-30
end
show spanning-tree mst configuration
- will show if switch is running in mst mode or pvstp
- will show instance and vlans mapped per instance
- of course, if you're running VTP, you can only configure MST on the MST switch primary server


global config
> vtp mode off

OR in link level
int fa0/1
no vtp

to exit primary server 
exec mode
> vtp mode client
> vtp mode server


RSPAN vlans
conf t
vlan 2222
remote-span
end
show vlan remote span
- RSPAN is advertised on VTP

==============================================================

EtherChannel

- Technique for aggregating the bandwidth of physical links together
- aka: port channels, channeling, Link Aggregation (LAG), NIC Teaming

2 Parts
- Port Channel Interface
- Actual Member Interfaces

Goal: hide the member interfaces from the upper layer protocols
- eg. STP sees one 2Gbps link, not 2 x 1Gbps
- Results is active/active forwarding instead of active/standby with STP

Advantages
- Cheap incremental upgrade solution
- Adds link layer redundancy

Disadvantages
- flows cannot exceed the bandwidth of an individual link (frames cannot be split)
     eg. 2 Gbps LAG is NOT a 2Gbps pipe but a 2 x 1Gbps pipe
     eg. LAG adds lanes to highway but doesnt increase the speed limit
- load distribution: flows can get polarized to one member of the LAG
     eg. 1x40GigE gives better throughput than 4x10GigE
     - check load balancing (dst-mac, src-mac, etc)
- LAG doesnt make the best decision on load distribution


SINGLE VS MULTICHASSIS ETHERCHANNEL
- EtherChannels cause fate sharing at the access layer
  eg. what happens when an access switch goes down (even with redundact power, redundant NICs)
- One solution - use two access layer switches
  > problem is that NICs usually only support active/standby outside LAG
  > only 50% of BW is lost unless application supports load distribution at upper layers
- Better solution - trick the servicer into running LAG
  > Form a logical chassis between two physical switches
  > Results is that server thinks it has two connections to same switch
  > 100% BW can be used and more resiliency is added
- Goal is to turn physical triangle into a logical P2P link


How MultiChassis EtherChannel (MCEC) Works
- MCEC/MLAG relies on sync control plane between switches
  > forward the data plane out member ports of both chassis
  > sync the control plane on the backend transparently
  > sync is proprietary and not inter-operable
  
  
CISCO's MCEC IMPLMENTATIONS

Stackwise Cross-Stack EtherChannel
- Access platforms eg Catalyst 3750/3850
- control plane synnc over dedicated stacking cables
- stack cable creates a bidirectional closed-loop
- one control plane is shared among stack members
- one management plane is shared among stack members

Virtual Switching Systems (VSS)
- Aggregation platforms (catalyst 4500/6500/6800)
- control plane sync over Virtual Switch Link (VSL)
  > Typically 2x10GigE LAG
- one control plane shared among VSS
- one management plane shared among VSS
- usually 1 active supervisor and 3 standby supervisors

Virtual Port Channel (vPC)
- data platforms (nexus 5000/7000/9000)
- control plane sync over a vPC peer link
  > typically 2x 10GigE LAG
- 2 independent control planes in the vPC
- 2 independent management planes in the vPC
- usually 2 active supervisors and 2 standby supervisors

StackWise vs VSS vs vPC
- Stackwise can have more than 2 members up to the stack limit
- VSS and vPC are always a pair of switches
- logical results of all is the same


EtherChannel Negotiation Protocols
- LAG goal is to trick STP into forwarding active/active
  > risk is infinite loop
  > negotiation protocols help mitigate risk
- LAG negotiation comes in 2 forms
  > Port Aggregation Protocol (PAgP)
  > Link Aggregation Control Protocol (LACP)
- Static LAG is supported but not recommended
  > failure to LAG can cause STP loop
  > EtherChannel Guard can help mitigate this
  
PAgP
- cisco proprietary
- esentially pre-standard LACP

LACP
- standard per IEEE 802.3ad Link Aggregation (LAG)

Function is the same (thinks ISL vs dot1q)

LAG is configured as
- channel-group [number] mode [mode]

MODES
On - No negotiation
Desirable and Auto - initiate and listen for PAgP
Active and Passive - Initiate and liste for LACP


LOAD BALANCING
- LAG driver is responsible for load distribution amongst members
  > ie STP and CAM table see LAG as outgoing interface, not members
  > best way to chec/verify network
- Available load balancing methos are per-platform
  > source and dest mac
  > src and dest IP address
  > src and dest Layer 4
- balancing is locally significant and outbound
  > mismatching on either end is ok
  > adjustments should be made based on traffic patterns to prevent traffic polarization

BEST PRACTICE
- get statictics and do manual change of load distribution
- probably need SNMP for data


Layer 2 vs Layer 3 EtherChannel
- LAG is independent or port mode
  > eg LAG can be access, trunk, tunnel, layer 3, etc
- LAG commonly suffers from order of operations issues
  > members and LAG interface must agree on parameters
  > eg both members and LAG are layer 2 or layer 3, but no mix

==============================================================

Layer 2 EtherChannel Configuration


conf t
int range fa0/23-24
channel-group 1 mode [active|passive|auto|desirable|on]       !locally significant number
end
show int fa0/23 status
show int fa0/24 status
show etherchannel summary   !!verification. Protocol field indicates the protocol used (Null for mode ON)
show spanning-tree

- There will be a spanning tree loop if the other side is not configured/misconfigured LAG

BEST PRACTICE
create LAG
member has blank config
put the member into the LAG
make changes on the LAG interface. it will automatically be inherited on the member ports

conf t
int range fa0/21 -22
shutdown        <------------!!! if you dont shut ports down, when you config the encap on po3, SW will config the encap on the individual members, one by one
!!!!!!!!!!!!!! SW will detect incompatability and will suspend the other member with diff config
!!!!!!!!!!!!!! Ports will be Independent (show etherchannel summary) 
channel-group 3 mode desirable
end
int po3
switchport trunk encap dot1q
switchport mode trunk
end
int range fa0/21 - 22
no shut


- LACP and PAgP will check neighboring switch priority and Device ID to check if ports are connected to same neighbor switch
- Device with lower device priority will do the negotiation
- on VSS and vPC, protocol spoofs the Device ID to be the same (so other end will think it is the same chassis)


show mac address-table dynamic {MAC ADDRESS}
- it will show that MAC is learned on the port channel interface

==============================================================

Layer 3 EtherChannel Configuration

!! Best to configure on blank interface config
!! port channel should be same layer with phy interface. ie L2 port channel for l2 phy ports. l3 port channel, l3 phy ports

conf t
default int range fa0/23 - 24
int range fa0/23 - 24
shutdown
no switchport   !!Switchport is disabled. port is on L3 port. if this is done under the port channel, it will not be inherited on the members
channel-group 1 mode [active|passive|auto|desirable|on]     !!!!port channel will inherit the no switchport command. port channel is now at L3
end
int po1
ip address 12.0.0.1 255.255.255.0
end
int range fa0/23 -24
no shut

show vlan internal usage      !!!!internal vlan will be associated on the port channel. NOT on the phy port

conf t 
int range fa021-24
channel-protocol pagp     !!!!!!!!!!!!!!!!!!!!! only pagp can run on the  interface. safety net to set negotiation to pagp.
!!!!!!!!!!!!of course, there is also channel-protocol lacp

==============================================================

Spanning-Tree Protocol (Legacy and Per VLAN STP)

ROOT BRIDGE ELECTION
ROOT PORT ELECTION
MODIFYING STP PATH SELECTION
UNDERSTANDING STP TIMERS

How STP Works
- Elect one Root Bridge
- Elect one Root Port per Bridge
- Elect Designated Ports
* Other ports are in blocking state afterwards

ROOT BRIDGE ELECTION
- Switch with lowest bridge ID in the network becomes root bridge
- Bridge ID contains (BID + SYS ID EXT : MAC )
  > Bridge Priority
    - 0 - 61440 in increments of 4096
    - default of 32768
  > System ID Extension
    - 0-4095 (basically vlans)
  > MAC Address of switch

Changing Root Bridge Election
- Manually change BID Priority
  > spanning-tree vlan [VLAN] priority
  > lower is better
- User root bridge macro
  > spanning-tree vlan [VLAN] root [primary|secondary]
  > sets local priority based on current root bridge
- Verification
  > show spanning-tree vlan [VLAN]
  > show spanning-tree root

Port Roles
Root ----> Forwarding Upstream
Designated ----> Forwarding downstream
Blocked ----> cannot associate MAC address; cannot do MAC learning; thus cannot reply on this link; still receiving traffic


ROOT PORT ELECTION
- Root Port is upstream facing towards Root Bridge
- Elected based on lowest Root Path Cose
  > cumulative cost of all links to get to the root
- Cost based on inverse BW
  > ie. higher bandwidth = lower cost
  > not linear
  > RSTP has improvement on cost values
- If tie in cost
  > choose lowest upstream BID (show spanning-tree detail: Designated Bridge has priority ______, address ________)
  > choose lowest upstream Port ID (Designated Port ID / Port Identifer of local switch)
  
Data rate     STP cost      RSTP cost
4 Mbit/s        250       	5,000,000
10 Mbit/s       100       	2,000,000
16 Mbit/s       62        	1,250,000
100 Mbit/s	    19    	    200,000
1 Gbit/s	      4         	20,000
2 Gbit/s	      3         	10,000
10 Gbit/s	      2         	2,000
100 Gbit/s	    N/A        	200
1 Tbit/s	      N/A       	20
  
show spanning-tree   !!!!!!!! Verify
show spanning-tree detail
  > look for BID
  > hello time, max age, forward delay  -------- configured by root. can only be changed on the root bridge
  > root priority and MAC
  > Root Port and cost to Root Bridge
    - Check local cost of link
    - Check upstream neighbor cost (designated path cost)
    - If designated path cost = 0, port is directly connected to root bridge. Root brigde is advertising cost of 0


DESIGNATED PORT ELECTION
- DPs are downstream facing away from Root Bridge
- Like Root Port, elected based on
  > Lowest Root Path Cose
  > Lowest BID
  > Lowest Port ID
- All other ports go into blocking mode
  > Receive BPDUs
  > Discard all other traffic
  > cannot send traffic
  
24:42



==============================================================

Optional Spanning-Tree Features



==============================================================

Rapid Spanning-Tree Protocol



==============================================================

Multiple Spanning-Tree Protocol



==============================================================
