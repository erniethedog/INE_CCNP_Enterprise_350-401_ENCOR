==================================================================
Rapid Spanning-Tree Protocol & MST

802.1w - rstp
802.1D-2004 - current RSTP standard

802.1s - MST


RSTP BPDUs - NEW FORMAT and HANDLING
What Makes RSTP rapid?
New RSTP Topology Change Process

REMEBER STP RULE: Switch can only have one DP going towards a single collision domain 

New Port Roles
- Alternate
  > port received a BPDU from another switch
- Backup
  > port received a BPDU from itself
- Edge
  > For port fast
  > when a switch received a BPDU on a port fast interface, SW will disbale port fast on that interface (even if it is configured on show run)


NEW BPDU FORMAT
- Protocol version 2 (was 0 for legacy) for RSTP
- No more TCN frames
  > A different frame is now sent instead of the TCN
- Flag field changes
  > All flag fields have meaning on RSTP. On legacy, only bits 0 and 7 have values. This is how switch tells if peer is running legacy or rstp
  > 802.1D bridges drop RSTP BPDUs
  
NEW BPDU HANDLING
- on legacy, Root Bridge generates and sends BPDU and send this out to other switches
- receiving switches will process the received BPDU (add cost, change bridge ID to their own BID, change port names, etc) then send this out downstream
- basically, on 802.1d (legacy), BPDUs are only forwarded, after being received on the Root Port
- No BPDU received? Nothing to forward downstream
- Upstream switch is declared dead after Max-Age. TCN is now sent

- on 802.1w
- BPDUs are generate every Hello interval (default 2s) on DP regardless of frequency of BPDUs received on root port
- upstream switch is declared dead after 3x Hello interval
- IF 3x Hello interval is longer that Max-Age, Max-Age will be used to declare a switch is dead
  > show spanning-tree

==================================================================
RSTP Synchronization Process

Proposal and Agreements (CAN ONLY BE USED FOR P2P; CANNOT BE USED ON SHARED INTERFACES)
- Bidirectional BDPU transmission with "proposal" bit set (I want to be the Root Bridge)
- BPDU transmission with 'agreement' bit set (from SW that is going to be the root bridge)

==================================================================
RSTP Topology Changes

- TC Flag is set on the BPDU frame
- Generated when non-edge port goes FORWARDING
- "broadcasted" on the network by the initiator (not by the Root anymore like in legacy)
  > sent on all root ports
  > sent on all designated ports that are non-edge
- Flush most of the CAM entries in the network IMMEDIATELY
  > Edge ports are not flushed
  > MACs on ports receiving Topology Change BPDU are not flushed
  > More flooding but restore connectivity immediately

==================================================================
Multiple Spanning-Tree Protocol

 - SAME on previous notes

==================================================================
MST Regions & BPDU Details

- MST defines a Region as bridges that agree upon
  > Region Name
  > Revision Number (does not dynamically change)
    - personal note by Keith/INE, this is like some sort of security/password in which every SW should agree
  > VLAN to STP instance mappings
  
Creating MST Region
- Following steps must be done manually on all switches that will be running MST
- VTPv3 may be used to propagate this config among switches

! global config
spanning-tree mst configuration
name [MST_NAME]

- Once you create your MST Region, Instance 0 exists by default and all VLANs are in this instance
  > No load balancing possible yet
- Set the Revision Number and bundle VLANs into MST instances

! under spanning-tree mst configuration
revision 1
instance 1 vlan 101-200   !!You can start with any instance number. All SW just have to agree on the instance number
instance 2 vlan 201-300 

- Instances you create manually are called MSTI = MST Instance
- Remember than instance O (called IST) is the default instance. IST becomes relevant for interoperation with SW NOT running MST
- Any VLANs not moved in the MSTI will remain in IST

- Enable MST Globally
  > Real deployment must start at the Root and branch out

!global config
spanning-tree mode mst



PVST and MST BPDU DIFFERENCES
- PVST
  > Each instance of STP (per VLAN) transmits its own BPDU
  > Root Bridge for network with 20 VLANs will generate 20 BPDUs on each VLAN, every hello time (2s)
- MST
  > A single BPDU is generated which contains MST information for all instances relevant to an interface
  > Size of BPDU is variable depending on how many Mrecords it contans

MRecord
- An MRecord for a given instance contains:       
  > All STP Parameters for an MSTI
    - Root BID for that instance
    - Sending BID for that instance
    - Root Cost for that instance
    - ETC ETC ETC
- MSTIs are RSTP instnaces that only exist inside the region
- They don't interact directly with other STPs outside of the region
- Only one instance has timer related parameters (the IST instance)
- Portion of the BPDU that contains data for all MSTI     


On BPDU Capture (Wireshark)
- MST is version 3
- RSTP is version 2 (version 1 is also RSTP, but it was changed to 2)
- 802.1D is version 0


MST BPDU on TRUNK PORTS
- MRecord is propagated on trunks which allow that VLAN, including Instance-0

MST BPDU on Access Ports
- Mrecord for instance-0 (IST)
- Mrecord for VLAN in which that port belongs

==================================================================
MST Path Selection & Configuration


PATH SELECTION
- Same election process as CST/PVST
- Each Instance within a Region elects:
  > Root Bridge (per instance)
    - Lowest BID wins
  > Root Port (per bridge)
    - lowest cost
    - lowest upstream BID
    - lowest upstream port ID
  > Root port selection within MST region for IST dependeng on location of IST Master

Long Path Cost
- 802.1t defines new default 32 bit costs based on port bandwidth
  > spanning-tree pathcost method [long|short]  !under global config. long = 32 bits; short = 16 bits
- 802.1s MST uses these new values (by default)

BW (Mbps)     New Value       Orig Value
10            2 000 000           100
100           200 000             19
1000           20 000              4
10 000          2 000              2

Chaning MST Root Bridge Election
- Manually change BID priority
  > spanning-tree mst [instance] priority
  > lower is better
- Use root bridge macro
  > spanning-tree mst [instance] root [primary|secondary]
  > sets local priority based on current Root Bridge
- Verification
  > show spanning-tree mst [instance]
  > show spanning-tree root

Changing an MST Port's Role
- Modify the port's cost
  > spanning-tree mst [instance] cost
  > bandwidth [bps]   !interface level
- Modify the Bridge ID
  > spanning-tree [instance] priority
-Modify the Port ID
  > spanning-tree mst [instance] port-priority
- Verification
  > show spanning-tree interface [int] detail
  > show spanning-tree mst [instance] detail

==================================================================
MST Boundary Ports




==================================================================
MST: The Virtual-Bridge


==================================================================
IST Master & Root Port Selection


==================================================================
MST - PVST Simulation


==================================================================
