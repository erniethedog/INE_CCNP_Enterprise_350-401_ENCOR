https://my.ine.com/course/enterprise-campus-lan-switching-fundamentals/915025ba-2733-4e15-88d9-2794f7b67924
Enterprise & Campus LAN Switching Fundamentals

============================================================================
1. MAC Address-Table & Switching Basics

- Every switch has a MAC Address table
- Beginning of Frame is Preamble 7 bytes
- 1 byte SOF
- 6 bytes Destination MAC Address; 6 bytes Source MAC Address
- 2 bytes Length Identification
- Data/payload 46 to 1500 bytes
- 4 bytes FCS

MAC Address Learning Process
- MAC Address Table is a piece/chunk in memory
- When host send its FIRST Ethernet frame, the switch will build an entry in the table for that address.
- SOURCE MAC, SWITCH PORT where it learned MAC, VLAN

//CMD: show mac address-table

Types of Entries
- Static
- Dynamic

- Inactivity Timer / MAC Aging Timer. Default value = 300s (5 mins)
- When host sends a frame, Inactivity Timer resets
- When no frames are received on switch after the timer, switch drops the MAC entry
- When interface goes down, MAC entry is deleted on table

2 Types of Static Entries
- MAC Addresses loaded by switch upon bootup. You can see a CPU tag on those on the show command
- MAC statically/manually input by switch admin/user

//CMD: show mac address-table <dynamic> <address|value>
//CMD: show mac address-table count
//CMD: switch(config)#mac address-table aging time <secs>
Generally, do not change aging timer

//CMD: switch(config)#mac address-table static <MAC> vlan <id> interface <type/number>
Statically configure a MAC
This is usually the the very bottom the config (show run)


How to Determine Where to Send Frames (or DISCARD)
- Switch compares MAC address to ALL entries on its mac table
- For MAC with 2 entries, switch sends frame to port on static entry (like prioritization on static routes)
- If frame is not learned, switch will flood it to all ports on same vlan, except on the port where the frame was received
- Switch may also discard frame [//CMD: switch(config)#mac address-table static <MAC> vlan <id> drop]
- Switch will discard frame when destination port is also where the switch learned the mac address
- Discard frame when frames are runts or giants or with FCS error
- Discard based on access list or any security reasons decided by switch

============================================================================

2. TCAM & SDM Concepts

TERNARY CONTENT ADDRESSABLE MEMORY

- TCAMS are volatile
- TCAM can store three values unline regular RAM
  0 = True
  1 = Fales
  X = other voltage level = Don't Care
- Good for matching partial patterns
  Routes
  ACL Entries
  anything that would associated subnet or wildcard mask
- many switches use TCAMs for MAC Address-Table


TCAM Structure
- Value
- Mask
- Results

Example: Layer 3 TCAM Entry
3.1.1.0 / 24

TCAM Entry: first 24 bits are 0. last 7 bits are X
00000000 00000000 00000000 XXXXXXXX

Results: Pointer to Adjacency/Rewrite Info


Example: Layer 2 TCAM Entry
48 bit MAC. Mask of 48 bits with 0 value

Results: Egress Interface


TCAM Implementation
---------------------------------------------
Lower-End Switches

One chunk is holding TCAM Memory
TCAM is divided into L2 Entries, L3 Entries, QoS Policies, Security Policies

When frame comes in, Forwarding Engine (FE) extracts data from frame and looks up on the TCAM
TCAM responds back with the look ups
FE decides after receiving the results from TCAM


Higher-End Switches

A DIMM/SIMM is per TCAM function. One for L2, one for L3, one for QoS, one for Security
Dedicated memory for dedicated TCAM

same lookups by FE and responses by TCAM
---------------------------------------------


Switching Database Manager (SDM)
- Mechanism that determines TCAM usage for lower end switches
- utilize pre-formatted SDM templates
- Templates cannot be modified
- One can switch to a different template
- Different template only activated after a reload


SDM IOS Commands
show current template
//CMD: show sdm prefer ?

show available templates
//CMD: show sdm prefer

Change sdm preference
//CMD: switch(config)#sdm prefer <template-name>
//CMD: switch(config)#reload


============================================================================

3. VLANs & TRUNKS

Purpose of VLANS
- logical method of grouping Layer 2 switchport on a local switch into different broadcast domains

VLANS Facts and Configuration
- Range of 1 - 4095
0 : Reserved for 802.1p
example: frames sent from PC to switch (switch port of vlan45) has no vlan tags
         applying QoS from laptop (from the registry editor)
          Priority Code Point field (0-7 value; higher is prioritized) for QoS
          Need to put something in VLAN tag. VLAN tag is 0 just you can get access to the PCP filed

1 - 1001 : Normal Range VLANs
1002 - 1005 : Reserved VLANs - Token Ring; FDDI - TECHNOLOGY is not used anymore
1006 - 4094 : Extended Range 
4095 : Reserved - Depending on Operating System

How to Config
- Create VLAN globally (can be skipped when using Cisco when you directly go to next step)
//CMD: switch(config)#vlan <vlan-number>
//CMD: switch(config-vlan)#name <descriptive name>  !!vlan is not created unless you leave config-vlan mode

//CMD: switch(config)#vlan <vlan-range>             !!vlan 2-8 OR vlan 11,14,17,19-30
//CMD: switch(config)#no vlan 2-4094                !!will not delete reserved VLANs. will delete previously created vlans

- Apply VLAN to switchport
//CMD: switch(config)#interface <type/value>
//CMD: switch(config)#switchport access vlan <vlan-number>

- VLAN Verification
//CMD: switch#show vlan
!! Note that there are specialized types of vlans like RSPAN and Private VLANs

//CMD: switch#show vlan brief
//CMD: switch#show vlan summary
//CMD: switch#show vlan id <vlan-value>   !!check single vlan

Notes:
Each VLAN is a broadcast domain. As such, VLANs should be on different subnets
Extended range vlans
  - Needs VTP version 3
  - or Turn off VTP
Reserved VLANs cannot be used
Ports placed within unconfigured VLANs may become "inactive"
Beware of maximun STP instances when configuring large quantities of VLANs. On Cisco, each VLAN has its own instance of STP (PVSTP)



EXTENDING VLANS with VLAN TRUNKS

VLAN Trunk Functionality
- used to extend multiple broadcast domains between two switches utilizing a single physical link
- Frames must be embedded with some kind of VLAN identifier when travelling across a VLAN trunk. VLAN tag does not exist on access ports

Two Methods to Encapsulates
- Encapsulation via Cisco ISL
- Vlan Tag by 802.1q

Cisco ISL Trunks
- Inter Switch Link
- Depracated on MOST Cisco switches
- Encapsulate each Ethernet frame with additional ISL Header (26 bytes)
- In the header, there is a 15 bit field for VLAN ID

802.1q Trunks
- IEEE Standard
- Inserts a TAG into an Ethernet Header to denote VLAN ID
- Supports a Native VLAN which does not include a tag
- 802.1q tag is 32 bits long
  Frame Stucture: DA,SA, 802.1q_TAG, Type/Len, Data, FCS

802.1q TAG: TPID (16 bits), PCP (3 bits), DEI (1 bits), VID (12 bits)
TPID: 0x8100
PCP: Priority Code Point for QoS
DEI: Discard Eligibility Indicator --> 1 - Eligible to be discarded in times of Congestion; 0 - Dont drop frame
     Previously Canonical Field Identifier: 0 - Ethernet; 1 - Token Ring
VID: VLAN ID
     By default, native VLAN is VLAN 1. No tags on native VLAN 
     Native VLAN can be changed. Recommend to change native VLAN for security
     Native VLAN should be common on trunks or NATIVE VLAN MISMATCH will occur
     CDP will pick up NATIVE VLAN MISMATCH errors
     
VLAN TRUNK CONFIG
- static/manual trunking
- dynamic negotiation of trunking with peer switch

//CMD: switch(config-if)#switchport trunk encapsulation (isl|dot1q)     !!dot1q is used by almost everyone

force interface into trunking
//CMD: switch(config-if)#switchport mode trunk


Optional VLAN Trunking Commands
Changing Native VLAN
//CMD: switch(config-if)#switchport trunk native vlan <vlan-id>     !!should be a vlan PREVIOUSLY CREATED

Restricting VLANs in trunk
//CMD: switch(config-if)#switchport trunk allowed vlan <add|add|except|none|remove> <vlan-list>

To Tag Native VLAN
//CMD: switch(config)#vlan dot1q tag native

Monitoring VLAN Trunks
//CMD: switch#show interfaces trunk
//CMD: switch#show interfaces  <type/value> switchport
//CMD: switch#show interfaces status


Troubleshooting STATIC VLAN Trunks
- Confirm that neither side of trunk is Admin Down
- If one (or both) sides is Up/Down or Down/Down
  > Speed and Duplex
  > Physical layer
- Same encapsulation on both sides
- Native VLAN matches on both sides. This does not make the trunk go down
- Confirm that both sides of the trunk are allowing the same set of VLANs
- Confirm matching VTP Domain Name
  > Dynamic Trunking Proticol carries VTP Domain Name


DYNAMIC VLAN TRUNKING WITH DTP

Dynamic Trunking Protocol
- Cisco Proprietary Protocol
- Dynamically negotiate VLAN trunk encapsulation type and status
- Also serves as trunking keepalive mechanism (every 30 seconds)

!! BFD can actually see trunk problems

DTP Modes
- ON: Trunk is statically created but still transmits DTP
- Desirable: Port remains in Access Mode while initiating DTP requests for trunking
- Auto: Port remains in Access Mode while passively listening for DTP. Default

  Mode        Trunk (ON)  Desirable    Auto
  Trunk(ON)       Y           Y         Y
  Desirable       Y           Y         Y
  Auto            Y           Y         N
  
- DTP uses 802.3 Frame Type

Configuration
Encapsulation
//CMD: switch(config-if)#switchport trunk encapsulation (isl|dot1q)     !!DTP prefers ISL. need to config dot1q

DTP Trunking Mode
//CMD: switch(config-if)#switchport mode <trunk|auto|desirable>

Static VLAN; Disable DTP
//CMD: switch(config-if)#switchport nonegotiate

Troubleshooting DYNAMIC VLAN Trunks
- Same with Static steps
- check both side are suitable for trunking
- Remember that DTP is Cisco Proprietary
- DTP carries VTP domain name so ensure domain name matches on both side


============================================================================

4. VLAN TRUNKING PROTOCOL

- Cisco Proprietary
- Originally designed to ensure consistency of VLANs between switches
- VTP messages carried between switches on VLAN trunks


VTP Version 1
VTP Version 2
  - Support for Token Rings
  - Added VTP consistency checks
VTP Version 3
  - Enchaned authentication options
  - Support for extended range VLANs
  - Can propagate non-vlan information (ie. Multiple STP/MSTP, Private VLANs)


MODES
VTP ver 1 and 2
  - VTP Server Mode (default)
    > Create VLANs (populated to all switches)
    > Delete VLANs (populated to all switches)
  - VTP Client Mode
  - VTP Transparent Mode
    > Create/Delete VLANs which is only LOCAL to that switch
  - VTP Off
  
VTP ver 3
 - VTP Server Mode (default)
    > Wont let create/delete VLANs
 - VTP Primary Server
    > Net Admin chooses a switch to be the primary (manual; no dynamic)
 - VTP Client Mode
    > Cannot be a primary server
 - VTP Transparent Mode
 - VTP Off
 
 
OPERATION
Important VTP Parameters
 - VTP Domain Name (Case-sensitive)
 - VTP Authentication
 - VTP Configuration Revision - increment by 1 whenever changes occur
 
//CMD: switch#show vtp status


VTP CONFIGURATION

VTP 1 and 2
- same domain name
//CMD: switch(config)#vtp domain [name]

- configure version
//CMD: switch(config)#vtp version 2

- configure mode
//CMD: switch(config)#vtp mode [client|mode|transparent]

- configure password (optional)
//CMD: switch(config)#vtp password [password]

!! Revision number follows the number of commands/changes made on the VLAN database
!! 1 command = increment of 1 in revision number
!! MD5 hash/digest will change when you enter a password. That's how another switch will know that a password was added


VTP Version 3
- same with VTP 1 and 2 config
- Note that vtp version 3 defaults a switch to a VTP Secondary server

- Configure VTP Primary Server
//CMD: switch#vtp primary [force|mst|vlan]

- Plaintext auth password
//CMD: switch(config)#vtp password [password] !!cisco is used as an example
//CMD: switch(config)#end
//CMD: switch#show vtp password
VTP Password: cisco !!cisco is the password

- Plaintext entry but stored as hashed digest
//CMD: switch(config)#vtp password [password] hidden
//CMD: switch(config)#end
//CMD: switch#show vtp password
VTP Password: 74654654sdfsd8fsd4sfs4fsdf7f87sfqfsvx !!encrypted


!! On VTP Version 3, you can send the hashed password and enter it on the config
//CMD: switch(config)#vtp password <hashed-digest> secret
//CMD: switch(config)#vtp password 74654654sdfsd8fsd4sfs4fsdf7f87sfqfsvx secret  !!example

!! VTP Version 3 will have entry for Primary ID (MAC) and Primary Description for Primary Server
!! Need to config a switch to a primary server

//CMD: switch(config)#vtp primary
!! If there was another primary, the newly configured switch (to be a primary) will be the primary server
!! On some cases, when you config a switch to be primary, you will be prompted with a password

- See what interfaces are enabled for VTP
//CMD: switch#show vtp password
//CMD: switch#show vtp counters
//CMD: switch#show vtp interface    !!does not mean that the interfaces are up. Enabled VTP status means that VTP will flow once interface goes up


============================================================================

5. ETHERCHANNELS

Port Aggregation With Etherchannels

Why Etherchannels
- Need for sufficient bandwidth
- STP will block redundant ports/path

Etherchannels and STP Interaction
- STP treats one bundle/port channel as one link

Overview
- link aggregation method
- 802.3ad standard
- up to 8 active links in a channel
- Can be used to bundle
  > L2 Access ports
  > L2 VLAN trunks
  > L3 Routed Ports (utilizing single subnet)
- Treated as a single link  
  
Load-Balancing
- When switch receives a frame, MAC address is learned on the port channel interface
- Etherchannel doesnt fragment L2 frames. For a switch to send a frame to the port channel, it will pick a phy link on the bundle
- Load-balancing accomplished per-flow of traffic
- Frames belonging to the same flow always traverse the same physical link
- Multiple methods of defining a flow:
  > By default, flow = source MAC Address
  //CMD: switch(config)#port-channel load-balance <OPTION>
  > Other options: dst-ip, dst-mac, src-dst-ip, src-dst-mac, src-ip, src-mac
  > Command takes effect asap. No reboot required on device
  
Dynamic Etherchannels with PAgP
- PAgP = Port Aggregation Protocol (Cisco Proprietary)
- Only works on Cisco Switches. Doesnt work on Cisco Routers or servers
- Supports up to 8 active links in a channel
- Modes
  > Auto - waiting for other side to initiate
  > Desirable - initiate PAgP frams

Dynamic Etherchannels with LACP (Industry Standard)
- Link Aggregation Control Protocol
- IEEE Standard 802.3ad
- Supports up to 8 active links in a channel
- Support hot-standby links. IE. You can configure 10 links but only 8 will work at any instant
- Modes:
  > Passive = Auto in PAgP
  > Active = Desirable in PAgP
- LACP Priority and ID. Like in STP, lower is preferred. 
  > Switch with lower system priority will choose its ports for the bundle (in case there are more than 8 configured)
  > Lower port priority will go through the bundle

Layer-3 Etherchannels
//CMD: switch(config)#interface port-channel 1
//CMD: switch(port-channel)#no switchport
//CMD: switch(port-channel)#ip address 4.4.4.1/30


============================================================================

6. SUMMARY

Etherchannel Configuration Guidelines
- All links in an etherchannel must terminate between the same two switches
- All links characteristics must be the same
  > Speed and Duplex Settings
  > Configuration Settings
- Logical Port-Channel Interfaces
  > Dynamically Created
  > Subsequent configuration changes should be done here

Configuration Steps
- Ensure consistency between all potential linsk
- Select unused number for port-channel interface
- Bundle links into your Etherchannel
//CMD: switch(config)#interface fast 0/10-12 
//CMD: switch(config-if-range)#channel-group <CH GROUP NUM 0 to 48>
//CMD: switch(config-if-range)#channel-group 1 mode <active|auto|desirable|on|passive>
!!mode on = not sending anything. needs ON on the other side

Optional Etherchannel Configurations
- Designate a minimum number of links for the channel to be active
//CMD: switch(config)#interface port-channel <id>
//CMD: switch(config-if)#port-channel min-links <value>

- Designation maximum number of LACP links allowed in a bundle. Remaining link will be on hot-standby state
//CMD: switch(config)#interface port-channel <id>
//CMD: switch(config-if)#lacp max-bundle <1-8>


Monitoring Etherchannels
//CMD: switch#show etherchannel summary
//CMD: switch#show interface port-channel <value>
//CMD: switch#show lacp neighbor details
//CMD: switch#show lacp internal

!! LACP keepalives are sent about every 30 seconds
============================================================================
