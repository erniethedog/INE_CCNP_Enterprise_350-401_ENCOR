https://my.ine.com/course/enterprise-campus-lan-switching-fundamentals/915025ba-2733-4e15-88d9-2794f7b67924
Enterprise & Campus LAN Switching Fundamentals

============================================================================
1. MAC Address-Table & Switching Basics

- Every switch has a MAC Address table
- Beginning of Frame is Preamble 7 bytes
- 1 byte SOF
- 6 bytes Destination MAC Address; 6 bytes Source MAC Address
- 2 bytes Length Identification
- Data/payload 46 to 1500 bytes
- 4 bytes FCS

MAC Address Learning Process
- MAC Address Table is a piece/chunk in memory
- When host send its FIRST Ethernet frame, the switch will build an entry in the table for that address.
- SOURCE MAC, SWITCH PORT where it learned MAC, VLAN

//CMD: show mac address-table

Types of Entries
- Static
- Dynamic

- Inactivity Timer / MAC Aging Timer. Default value = 300s (5 mins)
- When host sends a frame, Inactivity Timer resets
- When no frames are received on switch after the timer, switch drops the MAC entry
- When interface goes down, MAC entry is deleted on table

2 Types of Static Entries
- MAC Addresses loaded by switch upon bootup. You can see a CPU tag on those on the show command
- MAC statically/manually input by switch admin/user

//CMD: show mac address-table <dynamic> <address|value>
//CMD: show mac address-table count
//CMD: switch(config)#mac address-table aging time <secs>
Generally, do not change aging timer

//CMD: switch(config)#mac address-table static <MAC> vlan <id> interface <type/number>
Statically configure a MAC
This is usually the the very bottom the config (show run)


How to Determine Where to Send Frames (or DISCARD)
- Switch compares MAC address to ALL entries on its mac table
- For MAC with 2 entries, switch sends frame to port on static entry (like prioritization on static routes)
- If frame is not learned, switch will flood it to all ports on same vlan, except on the port where the frame was received
- Switch may also discard frame [//CMD: switch(config)#mac address-table static <MAC> vlan <id> drop]
- Switch will discard frame when destination port is also where the switch learned the mac address
- Discard frame when frames are runts or giants or with FCS error
- Discard based on access list or any security reasons decided by switch

============================================================================

2. TCAM & SDM Concepts

TERNARY CONTENT ADDRESSABLE MEMORY

- TCAMS are volatile
- TCAM can store three values unline regular RAM
  0 = True
  1 = Fales
  X = other voltage level = Don't Care
- Good for matching partial patterns
  Routes
  ACL Entries
  anything that would associated subnet or wildcard mask
- many switches use TCAMs for MAC Address-Table


TCAM Structure
- Value
- Mask
- Results

Example: Layer 3 TCAM Entry
3.1.1.0 / 24

TCAM Entry: first 24 bits are 0. last 7 bits are X
00000000 00000000 00000000 XXXXXXXX

Results: Pointer to Adjacency/Rewrite Info


Example: Layer 2 TCAM Entry
48 bit MAC. Mask of 48 bits with 0 value

Results: Egress Interface


TCAM Implementation
---------------------------------------------
Lower-End Switches

One chunk is holding TCAM Memory
TCAM is divided into L2 Entries, L3 Entries, QoS Policies, Security Policies

When frame comes in, Forwarding Engine (FE) extracts data from frame and looks up on the TCAM
TCAM responds back with the look ups
FE decides after receiving the results from TCAM


Higher-End Switches

A DIMM/SIMM is per TCAM function. One for L2, one for L3, one for QoS, one for Security
Dedicated memory for dedicated TCAM

same lookups by FE and responses by TCAM
---------------------------------------------


Switching Database Manager (SDM)
- Mechanism that determines TCAM usage for lower end switches
- utilize pre-formatted SDM templates
- Templates cannot be modified
- One can switch to a different template
- Different template only activated after a reload


SDM IOS Commands
show current template
//CMD: show sdm prefer ?

show available templates
//CMD: show sdm prefer

Change sdm preference
//CMD: switch(config)#sdm prefer <template-name>
//CMD: switch(config)#reload








============================================================================




















